# 定义工作流的名称，该工作流主要用于将代码部署到 GitHub Pages
name: Deploy to GitHub Pages

# 定义工作流触发的条件
on:
  # 允许手动触发工作流，方便在需要时手动启动该工作流进行测试或特殊操作
  workflow_dispatch:
  # 当指定的工作流完成时触发此工作流
  workflow_run:
    # 指定要监听的工作流名称，这里是 "Download and Push Image" 工作流
    workflows: ["Download and Push Image"]
    # 指定监听的事件类型，这里表示当该工作流完成时触发
    types:
      - completed

# 定义工作流中的作业
jobs:
  # 定义一个名为 deploy 的作业，负责将代码部署到 GitHub Pages
  deploy:
    # 指定作业运行的环境，这里使用最新的 Ubuntu 系统
    runs-on: ubuntu-latest

    # 定义作业中的步骤
    steps:
      # 第一步：检出代码
      - name: 检出代码 Checkout repository
        # 使用 actions/checkout@v4 这个 Action 来将仓库代码检出到运行环境中
        uses: actions/checkout@v4
        
      # 安装 tree 命令
      - name: Install tree command
        run: |
          sudo apt-get update
          sudo apt-get install -y tree

      - name: 当前目录
        run: pwd

      # 打印父目录路径并列出父目录下的文件夹，若有 bing 文件夹则列出其文件
      - name: 父目录目录
        run: |
          parent_dir=$(dirname $(pwd))
          echo "父目录路径: $parent_dir"
          echo "父目录下的文件夹:"
          ls -d $parent_dir/*/
          if [ -d "$parent_dir/bing" ]; then
            echo "父目录下的 bing 文件夹存在，其中的文件如下："
            ls -l "$parent_dir/bing"
          else
            echo "父目录下的 bing 文件夹不存在。"
          fi
      - name: 检查 /bing 目录是否存在
        run: |
          if [ -d "./bing" ]; then
            if [ "$(ls -A ./bing)" ]; then
              echo "bing 目录存在且不为空。"
              tree ./bing  # 新增：使用 tree 命令列出文件
            else
              echo "bing 目录存在但为空。"
            fi
          else
            echo "bing 目录不存在。"
          fi
      # 第二步：部署到 GitHub Pages
      - name: 部署到 GitHub Pages
        # 使用 peaceiris/actions-gh-pages@v3 这个 Action 来完成部署操作
        uses: peaceiris/actions-gh-pages@v3
        with:
          # 使用 GitHub 令牌进行身份验证，确保有足够的权限进行部署操作
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # 指定要部署的目录，这里是 bing 目录，可根据实际文件夹名称修改
          publish_dir: ./bing
          keep_files: true  # 保留目标分支上的旧文件
        env:
          DEBUG: true